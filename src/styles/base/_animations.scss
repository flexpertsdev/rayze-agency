// CRITICAL MANZA-STYLE ANIMATIONS

// Text reveal animation
.span-hlines {
  .span-hline {
    display: inline-block;
    overflow: hidden;
    vertical-align: bottom;
    
    .span-hline-inner {
      display: inline-block;
      transform: translateY(100%);
      transition: transform 0.8s cubic-bezier(0.77, 0, 0.175, 1);
    }
    
    &.is-visible .span-hline-inner {
      transform: translateY(0);
    }
  }
}

// Staggered animation
.span-plines {
  .span-pline {
    display: inline-block;
    overflow: hidden;
    
    .span-pline-inner {
      display: inline-block;
      transform: translateY(110%);
      transition: transform 0.9s cubic-bezier(0.77, 0, 0.175, 1);
    }
    
    &.is-visible .span-pline-inner {
      transform: translateY(0);
    }
    
    // Stagger effect
    @for $i from 1 through 20 {
      &:nth-child(#{$i}) .span-pline-inner {
        transition-delay: #{$i * 0.02}s;
      }
    }
  }
}

// Fade animations
.fade-in {
  opacity: 0;
  transition: opacity 0.6s ease-out;
  
  &.is-visible {
    opacity: 1;
  }
}

.fade-up {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s cubic-bezier(0.77, 0, 0.175, 1);
  
  &.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
}

// Scale animations
.scale-in {
  opacity: 0;
  transform: scale(0.95);
  transition: all 0.6s ease-out;
  
  &.is-visible {
    opacity: 1;
    transform: scale(1);
  }
}

// Hover effects
.hover-lift {
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  
  &:hover {
    transform: translateY(-5px);
  }
}

.hover-scale {
  transition: transform 0.3s ease-out;
  
  &:hover {
    transform: scale(1.05);
  }
}

// Loading animation
.loading-animation {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0, 255, 136, 0.1), transparent);
    animation: shimmer 2s infinite;
  }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

// Parallax
.parallax {
  will-change: transform;
  
  &[data-speed="slow"] {
    --parallax-speed: 0.5;
  }
  
  &[data-speed="medium"] {
    --parallax-speed: 0.75;
  }
  
  &[data-speed="fast"] {
    --parallax-speed: 1.25;
  }
}